// Date: 02/04/2012 2:33:37 AM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX

package com.bioxx.tfc.Render.Models;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelPart;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;

import org.lwjgl.opengl.GL11;

public class ModelBear extends ModelBase
{
	//fields
	private ModelPart neck;
	private ModelPart bearHead;
	private ModelPart body;
	private ModelPart mainBody;
	private ModelPart leg1;
	private ModelPart leg2;
	private ModelPart leg3;
	private ModelPart leg4;
	private ModelPart tail;
	private ModelPart ear1;
	private ModelPart ear2;
	private ModelPart nose;

	public ModelBear ()
	{
		textureWidth = 128;
		textureHeight = 64;

		neck = new ModelPart (this, 0, 29);
		neck.addCuboid (0F, 0F, 0F, 4, 5, 8);
		neck.setPivot (-3F, 12F, -10F);
		neck.setTextureSize (128, 64);
		neck.mirror = true;
		setRotation (neck, 0.3839724F, 0F, 0F);
		bearHead = new ModelPart (this, 0, 0);
		bearHead.addCuboid (-3F, -3F, -2F, 6, 6, 4);
		bearHead.setPivot (-1F, 13.5F, -10F);
		bearHead.setTextureSize (128, 64);
		bearHead.mirror = true;
		setRotation (bearHead, 0F, 0F, 0F);
		body = new ModelPart (this, 24, 18);
		body.addCuboid (-4F, -2F, -3F, 6, 7, 7);
		body.setPivot (0F, 14F, 4F);
		body.setTextureSize (128, 64);
		body.mirror = true;
		setRotation (body, 1.308997F, 0F, 0F);
		mainBody = new ModelPart (this, 24, 0);
		mainBody.addCuboid (-4F, -3F, -3F, 8, 10, 8);
		mainBody.setPivot (-1F, 14F, -3F);
		mainBody.setTextureSize (128, 64);
		mainBody.mirror = true;
		setRotation (mainBody, 1.570796F, 0F, 0F);
		leg1 = new ModelPart (this, 0, 18);
		leg1.addCuboid (-1F, 0F, -1F, 2, 8, 3);
		leg1.setPivot (-2.966667F, 16F, 6F);
		leg1.setTextureSize (128, 64);
		leg1.mirror = true;
		setRotation (leg1, 0F, 0F, 0F);
		leg2 = new ModelPart (this, 0, 18);
		leg2.addCuboid (-0.4666667F, 0F, -1F, 2, 8, 3);
		leg2.setPivot (0.5F, 16F, 6F);
		leg2.setTextureSize (128, 64);
		leg2.mirror = true;
		setRotation (leg2, 0F, 0F, 0F);
		leg3 = new ModelPart (this, 0, 18);
		leg3.addCuboid (-1F, 0F, -1F, 2, 8, 3);
		leg3.setPivot (-3.5F, 16F, -4F);
		leg3.setTextureSize (128, 64);
		leg3.mirror = true;
		setRotation (leg3, 0F, 0F, 0F);
		leg4 = new ModelPart (this, 0, 18);
		leg4.addCuboid (-1F, 0F, -1F, 2, 8, 3);
		leg4.setPivot (1.5F, 16F, -4F);
		leg4.setTextureSize (128, 64);
		leg4.mirror = true;
		setRotation (leg4, 0F, 0F, 0F);
		tail = new ModelPart (this, 10, 18);
		tail.addCuboid (-1F, 0F, -1F, 2, 2, 2);
		tail.setPivot (-1F, 13F, 9F);
		tail.setTextureSize (128, 64);
		tail.mirror = true;
		setRotation (tail, 1.130069F, 0F, 0F);
		ear1 = new ModelPart (this, 16, 14);
		ear1.addCuboid (-3F, -5F, 0F, 2, 2, 1);
		ear1.setPivot (-1F, 13.5F, -10F);
		ear1.setTextureSize (128, 64);
		ear1.mirror = true;
		setRotation (ear1, 0F, 0F, 0F);
		ear2 = new ModelPart (this, 16, 14);
		ear2.addCuboid (1F, -5F, 0F, 2, 2, 1);
		ear2.setPivot (-1F, 13.5F, -10F);
		ear2.setTextureSize (128, 64);
		ear2.mirror = true;
		setRotation (ear2, 0F, 0F, 0F);
		nose = new ModelPart (this, 0, 10);
		nose.addCuboid (-1.5F, 0F, -4F, 3, 3, 4);
		nose.setPivot (-1.0F, 13.5F, -10F);
		nose.setTextureSize (128, 64);
		nose.mirror = true;
		setRotation (nose, 0F, 0F, 0F);
	}


	@Override
	public void render (Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
	{
		super.render (entity, f, f1, f2, f3, f4, f5);
		setRotationAngles (f, f1, f2, f3, f4, f5, entity);

		float age = 1;
		//long tempAge = 0;
		//int sex = 0;
		/*if (entity instanceof EntityAnimalTFC)
		{
			tempAge = Math.min(TFC_Time.getTotalTicks()-((EntityAnimalTFC)entity).adultTime,0);
			if(tempAge < 0){
				age = (-1F)*tempAge / (((EntityAnimalTFC)entity).adultAge * TFC_Settings.dayLength);
				//System.out.print("completed; "+age+", "+tempAge);
			}
			sex = ((EntityAnimalTFC)entity).sex;
		}*/

		if (isChild)
		{
			float aa =  2F - (1.0F - age);
			GL11.glPushMatrix ();
			float ab = (float)Math.sqrt(1.0F / aa);
			GL11.glScalef(ab, ab, ab);
			GL11.glTranslatef (0.0F, 24F * f5 * age/aa,2F*f5*age/ab);
			ear1.render (f5);
			ear2.render (f5);
			nose.render (f5);
			bearHead.render (f5);
			GL11.glPopMatrix ();
			GL11.glPushMatrix ();
			GL11.glScalef (1.0F / aa, 1.0F / aa, 1.0F / aa);
			GL11.glTranslatef (0.0F, 24F * f5 * age, 0.0F);
			body.render (f5);
			mainBody.render (f5);
			leg1.render (f5);
			leg2.render (f5);
			leg3.render (f5);
			leg4.render (f5);
			neck.render (f5);
			tail.render (f5);
			GL11.glPopMatrix ();
		}
		else
		{
			ear1.render (f5);
			ear2.render (f5);
			nose.render (f5);
			bearHead.render (f5);
			body.render (f5);
			mainBody.render (f5);
			leg1.render (f5);
			leg2.render (f5);
			leg3.render (f5);
			leg4.render (f5);
			neck.render (f5);
			tail.render (f5);
		}
	}


	private void setRotation (ModelPart model, float x, float y, float z)
	{
		model.pivotX = x;
		model.pivotY = y;
		model.pivotZ = z;
	}


	@Override
	public void setRotationAngles (float f, float f1, float f2, float f3, float f4, float f5, Entity entity)
	{
		super.setRotationAngles (f, f1, f2, f3, f4, f5, entity);
		bearHead.pivotX = f4 / (180F / (float) Math.PI);
		bearHead.pivotY = f3 / (180F / (float) Math.PI);

		ear1.pivotX = f4 / (180F / (float) Math.PI);
		ear1.pivotY = f3 / (180F / (float) Math.PI);

		ear2.pivotX = f4 / (180F / (float) Math.PI);
		ear2.pivotY = f3 / (180F / (float) Math.PI);

		nose.pivotX = f4 / (180F / (float) Math.PI);
		nose.pivotY = f3 / (180F / (float) Math.PI);

		//MainBody.pivotX = ((float) Math.PI / 2F);
		leg1.pivotX = MathHelper.cos (f * 0.6662F) * 1.4F * f1;
		leg2.pivotX = MathHelper.cos (f * 0.6662F + (float) Math.PI) * 1.4F * f1;
		leg3.pivotX = MathHelper.cos (f * 0.6662F + (float) Math.PI) * 1.4F * f1;
		leg4.pivotX = MathHelper.cos (f * 0.6662F) * 1.4F * f1;
	}
}


